/*Написать программу с использованием нелокального перехода setjmp/longjmp, которая вычисляет сумму чисел Фибоначчи (начиная с1, 1,...). 
Использовать рекурсивную функции для вычисления суммы, в качестве механизма возврата из вложенных вызовов использовать нелокальный переход.*/


#include <stdio.h>
#include <setjmp.h>

jmp_buf buf; //объявляем переменную buf для нелокального перехода

int fib_sum(int n) //Функция fib_sum рекурсивно вычисляет сумму чисел Фибоначчи
{
    if (n == 0) 
    {
        longjmp(buf, 1); // Нелокальный переход при достижении 0
    }
    if (n == 1 || n == 2) 
    {
        return 1;
    }
    return fib_sum(n - 1) + fib_sum(n - 2);
}

int main() 
{
    int n, sum = 0;
    printf("Введите значение n: ");
    scanf("%d", &n);
    
    if (setjmp(buf) == 0) 
    {
        for (int i = 1; i <= n; i++) 
        {
            sum += fib_sum(i);
        }
    }

printf("Сумма чисел Фибоначчи до %d равна %d\n", n, sum);

return 0;
}
//В main() мы устанавливаем setjmp(buf) и используем цикл для вычисления и накопления суммы. 
Когда n достигает максимального значения, происходит переход на позицию setjmp(buf) с помощью longjmp(buf, 1), завершая рекурсию.
