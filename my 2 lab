#include <stdio.h>
/* ЗАДАНИЕ 1 
Объявить массив данных типа double размером 3 на 3. Ввести с консоли его значения, вывести на консоль сумму его элементов, 
расположенных на главной диагонали и сумму элементов, расположенных на  побочной диагонали.
*/

int main ()
{   int n = 3;
    double mas[n][n], sum_main = 0, sum_off = 0;
    int one_or_zero = 1;
    do
    {
        for (int i = 0; i < n; i++)
        for (int k = 0; k < n; k++)
            {
                printf("mas[%d][%d] = ", i + 1, k + 1);
                scanf("%lf", &mas[i][k]);
            }
            printf("\nEntered matrix is:\n");
            for (int i = 0; i < n; i++)
            {
                for (int k = 0; k < n; k++)
                {
                    printf("%lf  ", mas[i][k]);
                }
                printf("\n");
            }
            for (int i = 0; i < n; i++)
            {
                sum_main += mas[i][i];
                sum_off += mas[i][(n-1)-i];
            }
    printf("The main diagonal sum is: %lf\n", sum_main);
    printf("The side diagonal sum is: %lf\n", sum_off);
    printf("enter 1 to continue or 0 to end: ");
    scanf("%d", &one_or_zero);
    }while (one_or_zero);
    if (!one_or_zero)
    {
        printf("Programm is over!");
    }
    return 0;
}







/* ЗАДАНИЕ 2 
Объявить массив данных типа int размером 2 на 2. Ввести с консоли его значения, вывести на консоль квадрат данной матрицы. */

#include <stdio.h>

int matrix2[4], i, a11, a12, a21, a22, sq11, sq12, sq21, sq22, square[4], one_or_zero;

int main ()
{printf("enter the digit: ");
  scanf("%i", &one_or_zero);
  if (one_or_zero == 1)
  {do 
  { printf ("enter your first row: \n");
    scanf("%d %d", &a11, &a12);

    printf ("enter your second row: \n");
    scanf("%d %d", &a21, &a22);

   /* sq11 = a11*a11+a12*a21;
    sq21 = a21*a11+a22*a21;
    sq12 = a11*a12+a12*a22;
    sq22 = a21*a12+a22*a22;
    */
    
    square[0] = sq11;
    square[1] = sq12;
    square[2] = sq21;
    square[3] = sq22;
    
    printf("\n");
    printf("%d  %d\n%d %d\n", square[0], square[1], square[2], square[3]);
      
  } while (one_or_zero);
}
if (one_or_zero == 0)
 { printf ("Programm is over");
   return 0;
 }   
return 0;
}
