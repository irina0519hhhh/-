//ОТДЕЛЬНЫЙ МОДУЛЬ// 
Написать функцию, вычисляющую сумму, разность или произведение данных матриц (их передать по указателю) и воз-вращающую указатель на массив-результат. 
Разместить эту функцию в отдельном мо-дуле (отличном от того, где располагается функция main()). 
Выдать на консоль значе-ния полученного вектора.*/


// Функция для вычисления суммы матриц

double **mass_sum(double **mass1, double **mass2, int&) 
{
    double **result;
    result = (double **)malloc(n * sizeof(double));
    for (i = 0; i < n; i++) 
{
        result[i] = (double *)malloc(n * sizeof(double));
    }

    for (int i = 0; i < n; i++) 
        for (int j = 0; j < n; j++) 
    {
        result[i][j] = mass1[i][j] + mass2[i][j];
    }
    return result;

}


// Функция для вычисления разности матриц
double **mass_sum(double **mass1, double **mass2, int&mass1, int&mass2) 
{
    double **result;
    result = (double **)malloc(n * sizeof(double *));
    for (int i = 0; i < n; i++) 
{
        result[i] = (double *)malloc(n * sizeof(double));
    }

    for (int i = 0; i < n; i++) 
        for (int j = 0; j < n; j++) 
    {
        result[i][j] = mass1[i][j] - mass2[i][j];
    }
    return result;
}


// Функция для вычисления поизведения матриц

double **mass_sum(double **mass1, double **mass2) 
{
    double **result;
    int i, j;
    result = (double **)malloc(n * sizeof(double));
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
    {
        result[i][j] = 0;
        for (i = 0; i < n; i++) 
            for (int k = 0; k < n; k++) 
        {
            result[i][j] += mass1[i][k] * mass2[k][j];
        }
    return result;
}
