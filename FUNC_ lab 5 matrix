//ОТДЕЛЬНЫЙ МОДУЛЬ// 
Написать функцию, вычисляющую сумму, разность или произведение данных матриц (их передать по указателю) и воз-вращающую указатель на массив-результат. 
Разместить эту функцию в отдельном мо-дуле (отличном от того, где располагается функция main()). 
Выдать на консоль значе-ния полученного вектора.*/


// Функция для вычисления суммы матриц

double **mass_sum(double mass1[n][n], double mass2[n][n]) 
{
    int i, j, **result;
    result = (double **)malloc(sizeof(double *) * n);
    for (i = 0; i < n; i++) 
{
        result[i] = (double *)malloc(sizeof(double) * N);
    }

    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            result[i][j] = mass1[i][j] + mass2[i][j];
        }
    }
    return result;
}



// Функция для вычисления разности матриц

 double s; 
 double sq_tr (double per_tr, double a, double b, double c)
 {
    if (a < 0 || b < 0 || c < 0)
    {
        return 0;
    }
    p = per_tr/2;
    s = sqrt(p*(p-a)*(p-b)*(p-c));
    return s;
 } 


// Функция для вычисления поизведения матриц
bool validate_triangle(double a, double b, double c) 
{
    if (a + b > c && a + c > b && b + c > a) 
{
    return 1;
} else 
{
    return 0;
}
}
