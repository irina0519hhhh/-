/*Дано натуральное число N. Выведите все его цифры по одной, в обычном порядке (а потом в обратном), разделяя их пробелами или новыми строками. 
Например: 179 => 1 7 9; 179 => 9 7 1
При решении этой задачи нельзя использовать строки, списки, массивы (ну и циклы, разумеется).
*/



#include <stdio.h>

void printDigits(int n) 
{
    if (n >= 10) {
        printDigits(n / 10); // Рекурсивно вызываем функцию для числа без последней цифры
    }
    printf("%d ", n % 10); // Выводим последнюю цифру числа
}

void printReverseDigits(int n) 
{
    printf("%d ", n % 10); // Выводим последнюю цифру числа

    if (n >= 10) 
    {
        printReverseDigits(n / 10); // Рекурсивно вызываем функцию для числа без последней цифры
    }
}

int main() {
    int N = 179;

    printf("Цифры числа %d в обычном порядке: ", N);
    printDigits(N);
    printf("\n");

    printf("Цифры числа %d в обратном порядке: ", N);
    printReverseDigits(N);
    printf("\n");

    return 0;
}



/*В этой программе:
Функция printDigits рекурсивно вызывает саму себя для числа без последней цифры до тех пор, пока число больше или равно 10, и затем выводит последнюю цифру.
Функция printReverseDigits также рекурсивно вызывает саму себя для числа без последней цифры, но сначала выводит последнюю цифру перед рекурсивным вызовом.
В main() пример вызывает эти функции для числа 179 и выводит цифры в обычном и обратном порядке.
Этот подход демонстрирует использование рекурсии для обработки чисел без использования массивов, строк и циклов*/
