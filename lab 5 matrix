/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main()
{
    int n;
    char sign; 
	int i, j, k, t, m;
    printf("Enter n: ");
    scanf("%d", &n);
    double **sum, **min, **pr, **mass1, **mass2, **result, **result1, **result2, **result3;
    mass1 = (double**)malloc(m*sizeof(double*));
    for(i = 0; i < m; i++)
    {
        mass1[i] = (double*)malloc(n*sizeof(double));
        mass1[n][n];
    }
        mass2 = (double**)malloc(m*sizeof(double*));
        for(i = 0; i < m; i++)
        {
            mass2[i] = (double*)malloc(n*sizeof(double));
            mass2[n][n];
        }    
            for (i = 0; i < n; i++)
                for(j = 0; i < n; i++)
                {
                    printf("mass1[%d][%d]", i+1, j+1);
                    scanf("%lf", &mass1[i][j]);
                }
                for (k = 0; k < n; k++)
                    for(t = 0; t < n; t++)
                    {
                        printf("mass2[%d][%d]", k+1, t+1);
                        scanf("%lf", &mass2[k][t]);
                    }
                        printf("Enter '+', '-' or '*'");
                        scanf("%s", &sign);
                        if (sign == '+')
                        {  
                            result1 = mass_sum (double **mass1, double **mass2, int n, int m); 
                            printf("sum is = %d\n", **print_matr); 
                        }
                         if (sign == '-')
                        {
                            result2 = mass_min(double **mass1, double **mass2, int n, int m); 
                            printf("min is = %d\n", **print_matr);
                        }
                         if (sign == '*')
                        {
                            result3 = mass_pr(double **mass1, double **mass2, int n, int m); 
                            printf("pr is = %d\n", print_matr());
                        }
            return 0;
for (int i = 0; i < n; i ++)
{
     free (sum[i]);
     free (min[i]);
     free (pr[i]);
     free (mass1[i]);
     free (mass2[i]);
}
    free (sum);
    free (min); 
    free (pr); 
    free (mass1); 
    free (mass2);
}
