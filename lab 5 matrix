/*ЗАДАНИЕ 5
Разместить в динамической памяти 2 массива – 2 матрицы размерностью n на n с элементами типа double (значения n и элементы массивов ввести с консоли). 
А также ввести с консоли знак операции: '+', '-' или '*'. 

//ОТДЕЛЬНЫЙ МОДУЛЬ// 
Написать функцию, вычисляющую сумму, разность или произведение данных матриц (их передать по указателю) и воз-вращающую указатель на массив-результат. 
Разместить эту функцию в отдельном мо-дуле (отличном от того, где располагается функция main()). 
Выдать на консоль значе-ния полученного вектора.*/


#include <stdio.h>

int main()
{
    int n;
    char sign;
    printf("Enter n: ");
    scanf("%d", &n);
    double **sum, **min, **pr **mass1, **mass2, **result1, **result2, **result3;
    for (int i = 0; i < n; i++)
        for(int j = 0; i < n; i++)
        {
            printf("mass1[%lf][%lf]", i+1, j+1);
            scanf("%lf", &mass1[i][j]);
        }
        for (int k = 0; k < n; k++)
            for(int t = 0; t < n; t++)
            {
                printf("mass2[%lf][%lf]", k+1, t+1);
                scanf("%lf", &mass2[k][t]);
            }
                printf("Enter "+", "-" or "*");
                scanf("%s", &sign);
                if (sign == "+")
                {  
                    result1 = mass_sum(double **mass1, double **mass2, int n,int m) 
                    printf("sum is = %lf\n", ........); //написать функцию вывода матрицы на экран
                }
                 if (sign == "-")
                {
                    result2 = mass_min(double **mass1, double **mass2, int n,int m) 
                    printf("min is = %lf\n", .......);
                }
                 if (sign == "*")
                {
                    result3 = mass_pr(double **mass1, double **mass2, int n,int m) 
                    printf("pr is = %lf\n", ........);
                }
    return 0;
for (int i = 0; i < n; i ++)
{
     free (sum[i]);
     free (min[i]);
     free (pr[i]);
     free (mass1[i]);
     free (mass2[i]);
}
    free (sum);
    free (min); 
    free (pr); 
    free (mass1); 
    free (mass2);
}
