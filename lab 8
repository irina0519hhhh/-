/*Создать текстовый файл с записями, включающие имя/фамилию человека, год рождения, пол и рост (в метрах). 
Упорядочить элементы по году рождения, имени/фамилии, полу или росту. Вывести результат. 
Указать элемент, по которому следует упорядочить, через консоль. 
А также реализовать возможность задавать несколько полей для упорядочивания.*/


#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Person 
{
    char name[50];
    char surname[50];
    int birth_year;
    char gender;
    float height;
};

int compareByBirthYear(const void *a, const void *b) 
{
    return ((struct Person*)a)->birth_year - ((struct Person*)b)->birth_year;
}

int compareByNameSurname(const void *a, const void *b) 
{
    int res = strcmp(((struct Person*)a)->name, ((struct Person*)b)->name);
    if (res == 0) 
    {
        return strcmp(((struct Person*)a)->surname, ((struct Person*)b)->surname);
    }
    return res;
}

int compareByGender(const void *a, const void *b) 
{
    return ((struct Person*)a)->gender - ((struct Person*)b)->gender;
}

int compareByHeight(const void *a, const void *b) 
{
    return ((struct Person*)a)->height - ((struct Person*)b)->height;
}

int main() 
{
    FILE *file;
    file = fopen("people.txt", "wt");

    fprintf(file, "John Smith 1990 m 1.80\n");
    fprintf(file, "Alice Johnson 1985 f 1.65\n");
    fprintf(file, "Michael Brown 1978 m 1.75\n");

    fclose(file);

    // Reading data from the file and creating a structure
    int n = 4;
    struct Person *persons;
    persons = (struct Person*)malloc(n * sizeof(struct Person));

    file = fopen("people.txt", "rt");
    
    
    for (int i = 0; i < 3; i++) 
    {
        fscanf(file, "%s %s %d %c %f\n", persons[i].name, persons[i].surname, &persons[i].birth_year, &persons[i].gender, &persons[i].height);
    }

    fclose(file);
    
    int sortChoice;
    printf("Enter field to sort by (1 - Year of Birth, 2 - Name/Surname, 3 - Gender, 4 - Height): ");
    scanf("%d", &sortChoice);

    if (sortChoice == 1) 
    { 
        qsort(persons, n, sizeof(struct Person), compareByBirthYear);
    }        
    if (sortChoice == 2) 
    { 
        qsort(persons, n, sizeof(struct Person), compareByNameSurname);
    }
    if (sortChoice == 3) 
    {
        qsort(persons, n, sizeof(struct Person), compareByGender);
    }
    if (sortChoice == 4) 
    {
        qsort(persons, n, sizeof(struct Person), compareByHeight);
    }
    
    printf("Sorted result:\n");
    for (int i = 0; i < n; i++)
    {
        printf("%s %s %d %c %.2f\n", persons[i].name, persons[i].surname, persons[i].birth_year, persons[i].gender, persons[i].height);
    }
    free(persons);

    return 0;
}























#include <stdio.h>
#include <stdlib.h>

struct Person 
{
    char name[50];
    char surname[50];
    int birth_year;
    char gender;
    float height;
};

int main() 
{
    FILE *file;
    file = fopen("people.txt", "w");

    if (file == NULL) {
        printf("Error opening file\n");
        return 1;
    }

    fprintf(file, "John Smith 1990 M 1.80\n");
    fprintf(file, "Alice Johnson 1985 F 1.65\n");
    fprintf(file, "Michael Brown 1978 M 1.75\n");

    fclose(file);

    // Reading data from the file and creating a structure
    struct Person people[3];
    file = fopen("people.txt", "r");

    if (file == NULL) 
    {
        printf("Error opening file\n");
        return 1;
    }

    for (int i = 0; i < 3; i++) 
    {
        fscanf(file, "%s %s %d %c %f\n", people[i].name, people[i].surname, &people[i].birth_year, &people[i].gender, &people[i].height);
    }

    fclose(file);

    // Printing the data from the structure
    for (int i = 0; i < 3; i++) 
    {
        printf("Name: %s %s\n", people[i].name, people[i].surname);
        printf("Birth year: %d\n", people[i].birth_year);
        printf("Gender: %c\n", people[i].gender);
        printf("Height: %.2f\n", people[i].height);
        printf("\n");
    }

    return 0;
}

