/*Написать программу подсчитывающая количество битов, выставленных в единицу у числа типа long и double. 
Сами значения чисел вводятся с клавиатуры.*/


#include <stdio.h>

int countSetBitsLong(long num) 
{
    int count = 0;
    while (num)
    {
        count += num & 1;
        num >>= 1; //побитовый сдвиг числа num на 1
    }
    return count;
}

int countSetBitsDouble(double num) 
{
    int count = 0;
    unsigned long long int *p = (unsigned long long int *)&num;
    unsigned long long int temp = *p;

    while (temp) 
    {
        count += temp & 1;
        temp >>= 1;
    }
    return count;
}


/*Функция countSetBitsLong принимает число типа long и использует битовые операции сдвига и "и" для подсчета количества установленных в единицу битов.
Функция countSetBitsDouble принимает число типа double, интерпретирует его как unsigned long long int, чтобы обработать его биты, и затем подсчитывает количество установленных в единицу битов.*/

int main() {
    long inputLong;
    double inputDouble;

    printf("Введите значение типа long: ");
    scanf("%ld", &inputLong);
    
    printf("Введите значение типа double: ");
    scanf("%lf", &inputDouble);

    int longBits = countSetBitsLong(inputLong);
    int doubleBits = countSetBitsDouble(inputDouble);

    printf("Количество выставленных в единицу битов в числе типа long: %d\n", longBits);
    printf("Количество выставленных в единицу битов в числе типа double: %d\n", doubleBits);

    return 0;
}
/*В main() программа запрашивает ввод значений long и double с клавиатуры, затем вызывает эти функции для подсчета и вывода количества установленных в единицу битов.*/
